#!/usr/bin/python3
#+
# HersheyPy example: demo of same font with different line widths.
#
# Copyright 2015 by Lawrence D'Oliveiro <ldo@geek-central.gen.nz>. This
# script is licensed CC0
# <https://creativecommons.org/publicdomain/zero/1.0/>; do with it
# what you will.
#-

import sys
import os
import math
import qahirah as qah
from qahirah import \
    CAIRO, \
    Colour, \
    Vector
import hershey_font

fonts = dict \
  (
    (line_width, hershey_font.load("gothicita", line_width = line_width))
    for line_width in (0.005, 0.01, 0.02, 0.025, 0.03)
  )
font_size = 96
margin = Vector(10, 10)
text = "Lorem Ipsum Dolor Sit Amet"
g = qah.Context.create_for_dummy().set_font_size(font_size)
scaled_fonts = {}
for line_width in fonts :
    g.font_face = fonts[line_width]
    scaled_fonts[line_width] = g.scaled_font
#end for
pix_dimensions = \
    math.ceil(Vector
      (
            max(font.text_extents(text).x_advance for font in scaled_fonts.values())
        +
            2 * margin.x,
            sum(font.font_extents.height for font in scaled_fonts.values())
        +
            margin.y * (len(fonts) + 1)
      ))
pix = qah.ImageSurface.create(CAIRO.FORMAT_RGB24, pix_dimensions)
g = \
    (qah.Context.create(pix)
        .set_source_colour(Colour.grey(1))
        .paint()
        .set_source_colour(Colour.grey(0))
    )
pos = margin
for line_width in sorted(fonts.keys()) :
    g.scaled_font = scaled_fonts[line_width]
    g.move_to(pos + Vector(0, g.font_extents.ascent))
    g.show_text(text)
    pos += Vector(0, margin.y + g.font_extents.height)
#end for
pix.write_to_png("{}.png".format(os.path.basename(sys.argv[0])))
